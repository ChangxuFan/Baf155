nohup: ignoring input
2024-06-12 15:45:45 : WT_rep1
2024-06-12 15:45:45 : KO_rep1
2024-06-12 15:45:45 : WT_rep2
Calculating cell attributes from input UMI matrix: log_umi
2024-06-12 15:45:45 : KO_rep2
Calculating cell attributes from input UMI matrix: log_umi
2024-06-12 15:45:45 : WT_rep3
Calculating cell attributes from input UMI matrix: log_umi
2024-06-12 15:45:45 : KO_rep3
Calculating cell attributes from input UMI matrix: log_umi
Calculating cell attributes from input UMI matrix: log_umi
Calculating cell attributes from input UMI matrix: log_umi
Variance stabilizing transformation of count matrix of size 15557 by 9957
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 9957 cells
  |                                                                              |                                                                      |   0%Variance stabilizing transformation of count matrix of size 15671 by 10735
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 10735 cells
  |                                                                              |                                                                      |   0%Variance stabilizing transformation of count matrix of size 15492 by 10206
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 10206 cells
  |                                                                              |                                                                      |   0%Variance stabilizing transformation of count matrix of size 15233 by 10655
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 10655 cells
  |                                                                              |                                                                      |   0%Variance stabilizing transformation of count matrix of size 15870 by 15642
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 15642 cells
  |                                                                              |                                                                      |   0%Variance stabilizing transformation of count matrix of size 15669 by 15774
Model formula is y ~ log_umi
Get Negative Binomial regression parameters per gene
Using 2000 genes, 15774 cells
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |===================================                                   |  50%  |                                                                              |===================================                                   |  50%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |====================================================                  |  75%  |                                                                              |===================================                                   |  50%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100%
Found 102 outliers - those will be ignored in fitting/regularization step

Second step: Get residuals using fitted parameters for 15492 genes
  |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100%
Found 98 outliers - those will be ignored in fitting/regularization step

Second step: Get residuals using fitted parameters for 15557 genes
  |                                                                              |                                                                      |   0%  |                                                                              |==                                                                    |   3%  |                                                                              |=====                                                                 |   6%  |                                                                              |==                                                                    |   3%  |                                                                              |====                                                                  |   6%  |                                                                              |=======                                                               |  10%  |                                                                              |=========                                                             |  13%  |                                                                              |===========                                                           |  16%  |                                                                              |=======                                                               |   9%  |                                                                              |==============                                                        |  19%  |                                                                              |=========                                                             |  12%  |                                                                              |===========                                                           |  16%  |                                                                              |================                                                      |  23%  |                                                                              |=============                                                         |  19%  |                                                                              |===============                                                       |  22%  |                                                                              |==================                                                    |  26%  |                                                                              |==================                                                    |  25%  |                                                                              |====================                                                  |  29%  |                                                                              |====================                                                  |  28%  |                                                                              |=======================                                               |  32%  |                                                                              |=========================                                             |  35%  |                                                                              |======================                                                |  31%  |                                                                              |========================                                              |  34%  |                                                                              |===========================                                           |  39%  |                                                                              |==========================                                            |  38%  |                                                                              |=============================                                         |  42%  |                                                                              |============================                                          |  41%  |                                                                              |================================                                      |  45%  |                                                                              |===============================                                       |  44%  |                                                                              |=================================                                     |  47%  |                                                                              |==================================                                    |  48%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================                                  |  52%  |                                                                              |=====================================                                 |  53%  |                                                                              |======================================                                |  55%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  58%  |                                                                              |==========================================                            |  59%  |                                                                              |============================================                          |  62%  |                                                                              |===========================================                           |  61%  |                                                                              |==============================================                        |  66%  |                                                                              |=============================================                         |  65%  |                                                                              |================================================                      |  69%  |                                                                              |======================================================================| 100%
Found 101 outliers - those will be ignored in fitting/regularization step

  |                                                                              |===============================================                       |  68%  |                                                                              |==================================================                    |  72%  |                                                                              |==================================================                    |  71%  |                                                                              |====================================================                  |  75%Second step: Get residuals using fitted parameters for 15233 genes
  |                                                                              |                                                                      |   0%  |                                                                              |====================================================                  |  74%  |                                                                              |=======================================================               |  78%  |                                                                              |======================================================                |  77%  |                                                                              |=========================================================             |  81%  |                                                                              |===========================================================           |  84%  |                                                                              |========================================================              |  81%  |                                                                              |==                                                                    |   3%  |                                                                              |=============================================================         |  88%  |                                                                              |===========================================================           |  84%  |                                                                              |=====                                                                 |   6%  |                                                                              |======================================================================| 100%
  |                                                                              |===============================================================       |  91%Found 101 outliers - those will be ignored in fitting/regularization step

  |                                                                              |=============================================================         |  87%  |                                                                              |==================================================================    |  94%  |                                                                              |===============================================================       |  90%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
  |                                                                              |=================================================================     |  94%Second step: Get residuals using fitted parameters for 15671 genes
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |====================================================================  |  97%Computing corrected count matrix for 15557 genes
  |                                                                              |                                                                      |   0%  |                                                                              |=========                                                             |  13%  |                                                                              |======================================================================| 100%
  |                                                                              |===========                                                           |  16%  |                                                                              |==                                                                    |   3%  |                                                                              |==============                                                        |  19%  |                                                                              |==                                                                    |   3%  |                                                                              |====                                                                  |   6%  |                                                                              |====                                                                  |   6%Computing corrected count matrix for 15492 genes
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |   9%  |                                                                              |================                                                      |  23%  |                                                                              |=======                                                               |   9%  |                                                                              |=========                                                             |  12%  |                                                                              |===========                                                           |  16%  |                                                                              |==================                                                    |  26%  |                                                                              |=========                                                             |  12%  |                                                                              |=============                                                         |  19%  |                                                                              |===============                                                       |  22%  |                                                                              |==                                                                    |   3%  |                                                                              |==================                                                    |  25%  |                                                                              |=====                                                                 |   6%  |                                                                              |====================                                                  |  28%  |                                                                              |=======                                                               |  10%  |                                                                              |======================                                                |  31%  |                                                                              |=========                                                             |  13%  |                                                                              |========================                                              |  34%  |                                                                              |===========                                                           |  16%  |                                                                              |====================                                                  |  29%  |                                                                              |==========================                                            |  38%  |                                                                              |===========                                                           |  16%  |                                                                              |==============                                                        |  19%  |                                                                              |============================                                          |  41%  |                                                                              |=======================                                               |  32%  |                                                                              |================                                                      |  23%  |                                                                              |===============================                                       |  44%  |                                                                              |=============                                                         |  19%  |                                                                              |=================================                                     |  47%  |                                                                              |==================                                                    |  26%  |                                                                              |=========================                                             |  35%  |                                                                              |===================================                                   |  50%  |                                                                              |===============                                                       |  22%  |                                                                              |=====================================                                 |  53%  |                                                                              |====================                                                  |  29%  |                                                                              |===========================                                           |  39%  |                                                                              |=======================================                               |  56%  |                                                                              |==================                                                    |  25%  |                                                                              |=======================                                               |  32%  |                                                                              |==========================================                            |  59%  |                                                                              |=============================                                         |  42%  |                                                                              |=========================                                             |  35%  |                                                                              |============================================                          |  62%  |                                                                              |====================                                                  |  28%  |                                                                              |===========================                                           |  39%  |                                                                              |==============================================                        |  66%  |                                                                              |================================                                      |  45%  |                                                                              |=============================                                         |  42%  |                                                                              |======================                                                |  31%  |                                                                              |================================================                      |  69%  |                                                                              |================================                                      |  45%  |                                                                              |==================================================                    |  72%  |                                                                              |==================================                                    |  48%  |                                                                              |==================================                                    |  48%  |                                                                              |====================================================                  |  75%  |                                                                              |========================                                              |  34%  |                                                                              |=======================================================               |  78%  |                                                                              |====================================                                  |  52%  |                                                                              |====================================                                  |  52%  |                                                                              |=========================================================             |  81%  |                                                                              |==========================                                            |  38%  |                                                                              |===========================================================           |  84%  |                                                                              |======================================                                |  55%  |                                                                              |============================                                          |  41%  |                                                                              |=============================================================         |  88%  |                                                                              |======================================                                |  55%  |                                                                              |=========================================                             |  58%  |                                                                              |===============================================================       |  91%  |                                                                              |===============================                                       |  44%  |                                                                              |==================================================================    |  94%  |                                                                              |===========================================                           |  61%  |                                                                              |=========================================                             |  58%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
  |                                                                              |=============================================                         |  65%  |                                                                              |=================================                                     |  47%  |                                                                              |===========================================                           |  61%  |                                                                              |===============================================                       |  68%  |                                                                              |==================================================                    |  71%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  74%  |                                                                              |=============================================                         |  65%  |                                                                              |======================================================                |  77%  |                                                                              |=====================================                                 |  53%  |                                                                              |========================================================              |  81%  |                                                                              |===============================================                       |  68%  |                                                                              |=======================================                               |  56%  |                                                                              |===========================================================           |  84%  |                                                                              |==========================================                            |  59%  |                                                                              |=============================================================         |  87%  |                                                                              |==================================================                    |  71%  |                                                                              |===============================================================       |  90%  |                                                                              |============================================                          |  62%  |                                                                              |====================================================                  |  74%  |                                                                              |=================================================================     |  94%  |                                                                              |====================================================================  |  97%  |                                                                              |==============================================                        |  66%  |                                                                              |======================================================                |  77%  |                                                                              |======================================================================| 100%
  |                                                                              |================================================                      |  69%  |                                                                              |========================================================              |  81%  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  75%  |                                                                              |===========================================================           |  84%  |                                                                              |=======================================================               |  78%  |                                                                              |=============================================================         |  87%  |                                                                              |=========================================================             |  81%  |                                                                              |===============================================================       |  90%  |                                                                              |===========================================================           |  84%  |                                                                              |=============================================================         |  88%  |                                                                              |=================================================================     |  94%  |                                                                              |===============================================================       |  91%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
  |                                                                              |==================================================================    |  94%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
Computing corrected count matrix for 15233 genes
  |                                                                              |                                                                      |   0%  |                                                                              |====================================================                  |  75%Computing corrected count matrix for 15671 genes
  |                                                                              |                                                                      |   0%  |                                                                              |==                                                                    |   3%  |                                                                              |=====                                                                 |   6%  |                                                                              |=======                                                               |  10%  |                                                                              |=========                                                             |  13%  |                                                                              |===========                                                           |  16%  |                                                                              |==                                                                    |   3%  |                                                                              |==============                                                        |  19%  |                                                                              |====                                                                  |   6%Calculating gene attributes
  |                                                                              |================                                                      |  23%  |                                                                              |=======                                                               |   9%  |                                                                              |=========                                                             |  12%  |                                                                              |==================                                                    |  26%  |                                                                              |===========                                                           |  16%  |                                                                              |====================                                                  |  29%  |                                                                              |=============                                                         |  19%  |                                                                              |====================================================                  |  75%  |                                                                              |=======================                                               |  32%  |                                                                              |===============                                                       |  22%  |                                                                              |=========================                                             |  35%  |                                                                              |==================                                                    |  25%  |                                                                              |===========================                                           |  39%  |                                                                              |====================                                                  |  28%  |                                                                              |=============================                                         |  42%  |                                                                              |================================                                      |  45%  |                                                                              |======================                                                |  31%Calculating gene attributes
  |                                                                              |==================================                                    |  48%  |                                                                              |========================                                              |  34%  |                                                                              |====================================                                  |  52%  |                                                                              |==========================                                            |  38%Wall clock passed: Time difference of 4.937264 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
  |                                                                              |======================================                                |  55%  |                                                                              |============================                                          |  41%  |                                                                              |=========================================                             |  58%  |                                                                              |===============================                                       |  44%  |                                                                              |===========================================                           |  61%  |                                                                              |=============================================                         |  65%  |                                                                              |=================================                                     |  47%  |                                                                              |===============================================                       |  68%  |                                                                              |===================================                                   |  50%Centering data matrix
  |                                                                              |==================================================                    |  71%  |                                                                              |                                                                      |   0%  |                                                                              |====================================================                  |  74%  |                                                                              |=====================================                                 |  53%  |                                                                              |==================                                                    |  25%  |                                                                              |======================================================                |  77%  |                                                                              |===================================                                   |  50%  |                                                                              |=======================================                               |  56%  |                                                                              |====================================================                  |  75%  |                                                                              |========================================================              |  81%  |                                                                              |==========================================                            |  59%  |                                                                              |======================================================================| 100%
  |                                                                              |===========================================================           |  84%  |                                                                              |============================================                          |  62%Wall clock passed: Time difference of 4.985654 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
  |                                                                              |==============================================                        |  66%  |                                                                              |================================================                      |  69%Set default assay to SCT
  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  75%  |                                                                              |=============================================================         |  87%  |                                                                              |===============================================================       |  90%  |                                                                              |=======================================================               |  78%  |                                                                              |=================================================================     |  94%  |                                                                              |=========================================================             |  81%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
Centering data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |===========================================================           |  84%  |                                                                              |====================================================                  |  75%  |                                                                              |=============================================================         |  88%  |                                                                              |======================================================================| 100%
  |                                                                              |===============================================================       |  91%  |                                                                              |==================================================================    |  94%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
Set default assay to SCT
Calculating gene attributes
Wall clock passed: Time difference of 5.295935 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
Calculating gene attributes
Centering data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100%
Set default assay to SCT
Wall clock passed: Time difference of 5.37438 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
Centering data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100%
Set default assay to SCT
PC_ 1 
Positive:  Elane, Prtn3, Ctsg, Mpo, Ms4a3, Srgn, Nkg7, Hp, Tmsb4x, Wfdc21 
	   Ly6c2, Calr, Pglyrp1, Lcn2, Cd63, Slpi, Plac8, Fcnb, Alas1, F630028O10Rik 
	   Cyba, Serpinb1a, Prss57, Igsf6, Clec12a, Tspo, Lyz2, B4galt6, Fcgr3, Gstm1 
Negative:  Ermap, Aqp1, mt-Nd2, C1qtnf12, mt-Nd1, Atp1b2, mt-Co1, Car2, Tfrc, Cldn13 
	   Rhd, Abcb4, Tspan33, Ctla2a, mt-Nd4, Cpox, mt-Cytb, Hspd1, Tmem14c, mt-Atp6 
	   Malat1, Mt2, Steap3, Car1, Cd24a, Rhag, Ces2g, Blvrb, Podxl, Atp13a3 
PC_ 2 
Positive:  Ctla2a, Malat1, Adgrl4, Ifitm1, S100a6, Lyz2, H2afy, Angpt1, Ifi203, Adgrg1 
	   Wfdc17, Sox4, Ptprcap, Xist, S100a9, Ltb, Ptprc, Ccl9, Cd34, Tmem176b 
	   Akap13, AC149090.1, Cd52, Ms4a6c, Gm2a, Pim1, S100a8, Zbtb20, Meis1, Laptm5 
Negative:  Ermap, mt-Nd1, Aqp1, Elane, C1qtnf12, Tfrc, Atp1b2, Ctsg, mt-Nd2, Tmem14c 
	   Cldn13, Rhd, Cpox, Tspan33, Abcb4, Mpo, Prtn3, Hspd1, Steap3, Cpd 
	   Rhag, Atp13a3, Ces2g, Hsp90aa1, Podxl, Tnfaip2, Pla2g12a, Canx, Cd24a, Rps2 
PC_ 3 
Positive:  Elane, Prtn3, Ctsg, Mpo, Srgn, Ms4a3, Calr, H2afy, Ifitm1, Nkg7 
	   Ccr2, Ccl9, Ms4a6c, Emb, Cmtm7, Cd34, Ramp1, Plac8, Adgrl4, Ctla2a 
	   Gm2a, Eef1a1, Xist, Napsa, Cst3, Rps8, Rpsa, Lgals1, Igfbp4, Rps3 
Negative:  S100a8, S100a9, Ngp, Lcn2, Camp, Ltf, Lyz2, Ifitm6, Cd177, Wfdc21 
	   Cybb, Mmp9, Chil3, Lrg1, Retnlg, Anxa1, Pglyrp1, S100a6, Plbd1, Mmp8 
	   Lgals3, Itgb2l, Cstdc5, AA467197, Chil1, Acvrl1, Cd52, Syne1, Asprv1, Stfa2 
PC_ 4 
Positive:  Ctsg, Ctla2a, Cd63, Fcnb, Wfdc21, Elane, Pf4, Nkg7, Pglyrp1, Gstm1 
	   Angpt1, Srgn, Ltb, Hlf, Tmsb4x, Hsd11b1, Prss57, Plxnc1, Apoe, Pdzk1ip1 
	   Zbtb20, Meis1, Slc18a2, Serpina3g, Dst, Vwf, Adgrg1, Mecom, Mpl, Ptprcap 
Negative:  Ccr2, Ms4a6c, Emb, Lyz2, Ifitm1, Ccl9, Wfdc17, H2afy, Irf8, Cd34 
	   Ly6c2, Ctss, Calr, Tyrobp, mt-Nd1, Cst3, Il6st, Ly6e, Mpeg1, Cd53 
	   Erp29, F630028O10Rik, Csf1r, Cd52, Gm2a, Pld4, Lgals1, mt-Nd2, Mmp8, Hsp90ab1 
PC_ 5 
Positive:  Pf4, Ifitm1, Ctla2a, Itga2b, Serpina3g, mt-Nd1, Cpa3, F2r, mt-Cytb, Apoe 
	   Vwf, Ms4a2, Gp1bb, Plxnc1, mt-Nd2, mt-Nd4, Slc22a3, Ifitm3, Pbx1, mt-Atp6 
	   Cd9, Gp5, Ifitm2, Csrp3, Itgb3, Slc14a1, mt-Co3, Hist1h2ae, Hist1h2ap, Lat 
Negative:  Ighm, Cd74, Igkc, Jchain, Mzb1, Ly6d, Iglc2, Gm30211, Cd79a, Iglc3 
	   Ltb, Slamf7, Ly6a, Fam214a, Fcrla, Pou2af1, Hlf, Tnfrsf17, Derl3, Txndc5 
	   Eaf2, Chst1, Ifi203, Iglv1, Slc16a11, Trp53inp1, Iglc1, Ahnak, Ctss, Igkv14-126 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
15:51:32 UMAP embedding parameters a = 0.9922 b = 1.112
15:51:32 Read 10206 rows and found 30 numeric columns
15:51:32 Using Annoy for neighbor search, n_neighbors = 30
15:51:32 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
15:51:34 Writing NN index file to temp file /tmp/Rtmppee8WT/file6ef72f9eccb9
15:51:34 Searching Annoy index using 1 thread, search_k = 3000
PC_ 1 
Positive:  Elane, Mpo, Prtn3, Ctsg, Lcn2, Ms4a3, Hp, Calr, Cybb, Wfdc21 
	   Pglyrp1, S100a8, Ly6c2, Lrg1, S100a9, Ngp, Camp, Chil3, Ifitm6, Hspa5 
	   Lyz2, Cd177, C3, Ltf, F630028O10Rik, Tmsb4x, Cyba, Clec12a, Anxa1, Igsf6 
Negative:  Apoe, Ctla2a, Malat1, mt-Co1, Car2, Adgrl4, Rps9, Ermap, Xist, Aqp1 
	   Rps8, Car1, Adgrg1, Bcl11a, Angpt1, mt-Co3, C1qtnf12, Rps15, Tspan13, Ly6a 
	   Abcb4, H2-Q7, Ifi203, Rpl13, Tsix, Eef1a1, Vamp5, Meis1, Rps14, Rpl10a 
PC_ 2 
Positive:  Elane, Mpo, Ctsg, Prtn3, Calr, Ms4a3, Hspa5, mt-Nd1, Hsp90ab1, Ccr2 
	   P4hb, Gm26917, Manf, Nkg7, Srgn, Hsp90b1, Ctsz, Ssr2, Pdia6, Canx 
	   mt-Nd2, Atp8b4, Tmem97, Erp29, Ssr1, Prss57, Atp6v0c, Spcs2, Dmkn, Cst7 
Negative:  S100a9, S100a8, Ngp, Camp, Lyz2, Ltf, Ifitm6, Chil3, Cd177, Lcn2 
	   Cybb, Wfdc21, Lrg1, Chil1, Pglyrp1, S100a6, Cd52, Anxa1, Retnlg, Fcnb 
	   C3, Lipg, Tmsb4x, Lgals3, Pirb, AA467197, Itgb2l, Fpr2, Mmp9, Slfn4 
PC_ 3 
Positive:  Ifitm1, Adgrl4, Pim1, Wfdc17, H2afy, Ly6a, Ltb, Tmem176b, Mpo, Prtn3 
	   Sox4, Ifi203, Ctsg, Cd34, Ramp1, Vldlr, Emb, Elane, Ctla2a, Malat1 
	   Hlf, Ccl9, Tmem176a, Ptprc, Adgrg1, Fxyd5, Ms4a6c, AC149090.1, Gm2a, Chd3 
Negative:  Ermap, mt-Nd1, C1qtnf12, Aqp1, Car1, Abcb4, mt-Nd2, Ces2g, mt-Cytb, Cpox 
	   Atp1b2, Car2, Rhd, Tspan33, Cldn13, Tfrc, Aplp2, Blvrb, Tmem14c, Tnfaip2 
	   Rhag, Podxl, mt-Nd4, Mt2, Ugcg, Paqr9, Pla2g12a, Myh10, Tmem56, Hsp90aa1 
PC_ 4 
Positive:  Apoe, Ctla2a, Ifitm1, Pim1, Adgrl4, Wfdc17, mt-Nd4, Ifitm3, Angpt1, Rpl13 
	   Serpina3g, Meis1, mt-Cytb, mt-Nd2, Vldlr, mt-Co1, Tmem176b, Rps8, Rplp1, Ptpre 
	   mt-Atp6, Muc13, Rpsa, Hlf, Ly6a, Ikzf2, Slc18a2, S100a6, Creg1, Fut8 
Negative:  Ebf1, Vpreb1, Cd79a, Vpreb3, Igll1, Slamf6, Cd79b, Il7r, Mzb1, Lef1 
	   Akap12, Blnk, Atp1b1, Pde2a, Cplx2, Cd19, Rag1, Vpreb2, Slamf7, Arl6ip1 
	   Cecr2, Chst3, Ighm, Hist1h2ab, Hist1h2ae, Arpp21, Gfra2, Fxyd6, Pax5, H2afx 
PC_ 5 
Positive:  Apoe, Elane, Ctla2a, Itga2b, Pbx1, Srgn, Pf4, Ms4a2, Cpa3, Malat1 
	   Slc18a2, Vwf, Plxnc1, Ctsg, Cd63, Prtn3, Angpt1, Mpo, Fcer1a, Slc22a3 
	   Muc13, Gata2, Mfsd2b, Hist1h2ae, F2r, Nkg7, H2-Q7, Slamf1, Clca3a1, Serpina3g 
Negative:  H2afy, Ccr2, Emb, mt-Nd1, C1qtnf12, Wfdc17, Hsp90ab1, Ms4a6c, Cd52, Cd34 
	   Ermap, Adgrl4, Dntt, Ly6a, mt-Nd2, Egfl7, Flt3, Ltb, Irf8, Cd24a 
	   Ctss, Sell, mt-Cytb, Cd53, Pou2f2, Rplp1, Ccl9, Sox4, Tmem173, Tyrobp 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
15:51:38 UMAP embedding parameters a = 0.9922 b = 1.112
15:51:39 Read 9957 rows and found 30 numeric columns
15:51:39 Using Annoy for neighbor search, n_neighbors = 30
15:51:39 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
15:51:40 Annoy recall = 100%
15:51:41 Writing NN index file to temp file /tmp/Rtmppee8WT/file6eed2f9eccb9
15:51:41 Searching Annoy index using 1 thread, search_k = 3000
15:51:42 Commencing smooth kNN distance calibration using 1 thread
PC_ 1 
Positive:  Elane, Prtn3, Mpo, Ctsg, S100a8, Srgn, Fcnb, Camp, Ms4a3, Ly6c2 
	   Pglyrp1, S100a9, Cd63, Hp, Tmsb4x, Lcn2, Wfdc21, Nkg7, Cyba, Ngp 
	   Clec12a, F630028O10Rik, C3, Calr, Serpinb1a, Prss57, Hsd11b1, Cybb, Clec4a2, B4galt6 
Negative:  Ermap, Aqp1, mt-Co1, Ctla2a, Adgrg1, C1qtnf12, Xist, Car2, Malat1, Adgrl4 
	   Atp1b2, Ifitm1, Abcb4, Cldn13, Tspan13, Tspan33, Angpt1, Rhd, Serinc3, Slc14a1 
	   Ces2g, Tmem176b, Rhag, Cd34, mt-Nd2, Ptprcap, Bcl11a, Ctse, Sox4, Cpox 
PC_ 2 
Positive:  Ermap, Aqp1, C1qtnf12, Atp1b2, Tfrc, Cldn13, Tspan33, Rhd, Abcb4, Rhag 
	   Ces2g, Ctse, Cpox, Car2, Paqr9, mt-Nd1, Aplp2, Steap3, mt-Nd2, Cd24a 
	   Slc38a5, Mt2, Podxl, Car1, Tmem14c, Blvrb, Epor, Pla2g12a, Tmem56, Elane 
Negative:  Ccr2, Ifitm1, Ms4a6c, H2afy, Adgrl4, Emb, Cd34, Ctla2a, Tmem176b, Ccl9 
	   Gm2a, Sell, Ifi203, Flt3, Angpt1, Ramp1, Ptprcap, Cst3, H2-DMa, Wfdc17 
	   Sox4, Laptm5, Adgrg1, Xist, Bcl2, Lgals1, Lyz2, Malat1, Fxyd5, Tmem176a 
PC_ 3 
Positive:  Camp, S100a8, S100a9, Ngp, Fcnb, Pglyrp1, Ctla2a, Cd63, Chil3, Wfdc21 
	   Lcn2, Xist, Malat1, Tmsb4x, C3, Lrg1, Pf4, Angpt1, Adgrg1, Syne1 
	   Apoe, Cybb, Cd9, Itga2b, Clec12a, Itgb2l, Clec4a2, Adgrl4, Ptprcap, Cd177 
Negative:  Ctsg, Calr, Mpo, Ccr2, Ms4a6c, Emb, Slpi, Prtn3, mt-Nd1, Ly6c2 
	   Ms4a3, Hsp90ab1, Hspa5, Srgn, mt-Nd2, Ctsz, Erp29, Lgals1, Pdia6, Manf 
	   Gria3, Atp8b4, Hsp90b1, P4hb, Plod3, H2afy, Ctsh, Irf8, Ifitm1, Rps2 
PC_ 4 
Positive:  Ms4a6c, Ccr2, Camp, S100a9, S100a8, Lyz2, Psap, Ngp, Ly6c2, Irf8 
	   Ctsh, Ctss, Mpeg1, Emb, Cst3, Pld4, Ly86, Fcnb, Il6st, Cybb 
	   Cd74, Cd52, Ifi30, H2-Aa, Csf1r, Ahnak, Unc93b1, H2-Ab1, H2-Eb1, Tyrobp 
Negative:  Ctsg, Srgn, Ctla2a, Pf4, Itga2b, Elane, Nkg7, Apoe, Mpo, Xist 
	   Angpt1, Adgrg1, Vwf, Malat1, F2r, H2-Q7, Pbx1, Slc14a1, Cd9, Prtn3 
	   Serpine2, Pdzk1ip1, Mpl, Ms4a3, AC149090.1, Meis1, Gp1bb, Tsix, Plxnc1, Slc18a2 
PC_ 5 
Positive:  Ifitm1, Lcn2, Ngp, Ccr2, S100a9, H2afy, Ccl9, Camp, Csf2rb, Serpinb1a 
	   S100a8, Hsp90ab1, Ms4a3, Cd34, Adgrl4, Lrg1, Ffar2, Dmkn, Pim1, Emb 
	   Wfdc17, Emilin2, Fth1, Srgn, Hsp90aa1, S100a6, Il4ra, Rpl41, Flt3, Ctsg 
Negative:  Ly6c2, Pf4, Mpo, Elane, Psap, Malat1, Vwf, Itga2b, Ctsh, Xist 
	   Cd74, H2-Aa, H2-Ab1, Cst3, H2-Eb1, Irf8, Slc14a1, F2r, Cd9, Plbd1 
	   Lyz2, Prtn3, Mpeg1, Nkg7, Tsix, Apoe, Gp1bb, Pbx1, Plxnc1, Itgb3 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
15:51:43 UMAP embedding parameters a = 0.9922 b = 1.112
15:51:43 Read 10655 rows and found 30 numeric columns
15:51:43 Using Annoy for neighbor search, n_neighbors = 30
15:51:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
15:51:45 Initializing from normalized Laplacian + noise
15:51:46 Writing NN index file to temp file /tmp/Rtmppee8WT/file6ee92f9eccb9
15:51:46 Searching Annoy index using 1 thread, search_k = 3000
15:51:46 Commencing optimization for 200 epochs, with 436796 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***15:51:47 Annoy recall = 100%
****15:51:48 Commencing smooth kNN distance calibration using 1 thread
*********15:51:52 Initializing from normalized Laplacian + noise
**15:51:53 Annoy recall = 100%
15:51:53 Commencing optimization for 500 epochs, with 426200 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******15:51:54 Commencing smooth kNN distance calibration using 1 thread
**************15:51:58 Initializing from normalized Laplacian + noise
***15:51:59 Commencing optimization for 200 epochs, with 459018 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***************************************|
*****15:52:07 Optimization finished
Computing nearest neighbor graph
*******************PC_ 1 
Positive:  Apoe, Ermap, Aqp1, C1qtnf12, mt-Nd2, Malat1, mt-Co1, Car2, Ctla2a, Car1 
	   mt-Nd1, Abcb4, mt-Cytb, mt-Nd4, Ces2g, mt-Atp6, Blvrb, mt-Co3, Aplp2, Bcl11a 
	   Vamp5, Xist, H2-Q7, Zfpm1, Tspan33, Cpox, Pf4, Ugcg, Tspo2, Atp1b2 
Negative:  Elane, Mpo, Prtn3, Ctsg, Ms4a3, Calr, Ly6c2, Hp, Nkg7, Lcn2 
	   Ccr2, Clec12a, Srgn, Fcgr3, F630028O10Rik, Atp8b4, Pglyrp1, Wfdc21, Alas1, Hspa5 
	   Prss57, Igsf6, P4hb, Slpi, Dmkn, Cybb, Emb, Tmsb4x, Gstm1, Cst7 
PC_ 2 
Positive:  Lyz2, Ctla2a, Adgrl4, Malat1, Ifitm1, S100a8, S100a9, S100a6, Ngp, Pim1 
	   Camp, Tmsb4x, Cd52, Wfdc17, Ltf, Ifitm6, Apoe, Ltb, Cd177, Chil3 
	   Adgrg1, Sox4, H2afy, Lcn2, Ly6a, Tmem176b, Ifi203, Ptprc, Retnlg, Cybb 
Negative:  mt-Nd1, C1qtnf12, Ermap, Aqp1, mt-Nd2, Elane, mt-Cytb, Tmem14c, Mpo, Tfrc 
	   Abcb4, Car1, Ctsg, Hsp90ab1, Cpox, Hspd1, Tspan33, Cldn13, Rhd, Hsp90aa1 
	   Ces2g, mt-Nd4, Atp1b2, Canx, Aplp2, Cd24a, Prtn3, Rps2, Car2, Cpd 
PC_ 3 
Positive:  Mpo, Ctsg, Elane, Prtn3, H2afy, Calr, Ccr2, Adgrl4, Ifitm1, Ccl9 
	   Ms4a3, Cd34, Srgn, Nkg7, Ramp1, Ctla2a, Emb, Cmtm7, Tmem176b, Pim1 
	   Sox4, Adgrg1, Ms4a6c, mt-Co1, Sell, Igfbp4, AC149090.1, Eef1a1, Ly6e, Gm2a 
Negative:  S100a8, S100a9, Ngp, Camp, Ifitm6, Ltf, Lcn2, Cd177, Wfdc21, Chil3 
	   Lyz2, Cybb, Lrg1, Pglyrp1, Chil1, Retnlg, S100a6, Anxa1, Lgals3, C3 
	   Pirb, Cd52, Mmp9, Mmp8, C1qtnf12, Hp, Mcemp1, Itgb2l, Tmsb4x, Clec4a2 
PC_ 4 
Positive:  Apoe, Ctla2a, Pf4, Ifitm1, Itga2b, Angpt1, Pbx1, Pim1, mt-Nd4, Adgrl4 
	   mt-Cytb, mt-Co1, mt-Nd2, Meis1, Vwf, Ifitm3, Slc18a2, Plxnc1, Muc13, Ifitm2 
	   Serpina3g, Lyz2, Ptpre, mt-Atp6, Selp, Dapp1, S100a6, Tmem176b, Fut8, Csf2rb 
Negative:  Ebf1, Vpreb1, Vpreb3, Cd79a, Igll1, Slamf6, Il7r, Lef1, Cd79b, Cd19 
	   Akap12, Blnk, Mzb1, Atp1b1, Cplx2, Pde2a, Chst3, Rag1, Slamf7, Ighm 
	   Vpreb2, Cecr2, 1700027J07Rik, Arl6ip1, Pax5, Gfra2, Gfra1, Arpp21, Dntt, Sdc4 
PC_ 5 
Positive:  H2afy, Ccr2, Emb, Ms4a6c, Cd34, Adgrl4, Hsp90ab1, Ccl9, Sell, Wfdc17 
	   Flt3, mt-Nd1, Ly6a, Irf8, Cd52, Sox4, Egfl7, Ltb, mt-Co1, Cd53 
	   Dntt, Notch1, Satb1, Pou2f2, Tyrobp, Ctss, Tmem173, Igfbp4, Ramp1, Gm2a 
Negative:  Apoe, Pf4, Itga2b, Vwf, Elane, Pbx1, Ctla2a, Malat1, Timp3, Srgn 
	   Plxnc1, Gp1bb, Treml1, Pde10a, Mmrn1, Slc18a2, Prtn3, F2r, Itgb3, Rap1b 
	   Ctsg, Slc14a1, Pdcd4, Mpo, Mfsd2b, Clca3a1, Angpt1, Cavin2, Ms4a2, Slamf1 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
15:52:12 UMAP embedding parameters a = 0.9922 b = 1.112
15:52:12 Read 10735 rows and found 30 numeric columns
15:52:12 Using Annoy for neighbor search, n_neighbors = 30
15:52:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***************************************************|
*******15:52:14 Writing NN index file to temp file /tmp/Rtmppee8WT/file6ef42f9eccb9
*15:52:14 Searching Annoy index using 1 thread, search_k = 3000
***********|
*15:52:18 Optimization finished
Computing nearest neighbor graph
Computing SNN
*Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 10206
Number of edges: 379406

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********15:52:20 Annoy recall = 100%
*******************************15:52:21 Commencing smooth kNN distance calibration using 1 thread
***********|
Maximum modularity in 10 random starts: 0.8339
Number of communities: 13
Elapsed time: 2 seconds
Performing log-normalization
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Found 89 outliers - those will be ignored in fitting/regularization step

***************************************************|
*Second step: Get residuals using fitted parameters for 15669 genes
  |                                                                              |                                                                      |   0%15:52:24 Initializing from normalized Laplacian + noise
*  |                                                                              |======================================================================| 100%
Found 98 outliers - those will be ignored in fitting/regularization step

15:52:25 Commencing optimization for 200 epochs, with 463390 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****Second step: Get residuals using fitted parameters for 15870 genes
  |                                                                              |                                                                      |   0%*Computing SNN
***Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 10655
Number of edges: 398216

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******  |                                                                              |==                                                                    |   3%*************  |                                                                              |====                                                                  |   6%******************  |                                                                              |=======                                                               |   9%***********  |                                                                              |=========                                                             |  12%************|
Maximum modularity in 10 random starts: 0.8653
Number of communities: 13
Elapsed time: 2 seconds
*  |                                                                              |==                                                                    |   3%Performing log-normalization
**0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
  |                                                                              |====                                                                  |   6%*************************************  |                                                                              |===========                                                           |  16%***************|
*  |                                                                              |=======                                                               |   9%  |                                                                              |=============                                                         |  19%**  |                                                                              |=========                                                             |  12%*  |                                                                              |===============                                                       |  22%***  |                                                                              |==================                                                    |  25%**  |                                                                              |====================                                                  |  28%**  |                                                                              |===========                                                           |  16%*  |                                                                              |======================                                                |  31%**  |                                                                              |=============                                                         |  19%*  |                                                                              |========================                                              |  34%**  |                                                                              |==========================                                            |  38%  |                                                                              |===============                                                       |  22%***  |                                                                              |============================                                          |  41%  |                                                                              |==================                                                    |  25%***  |                                                                              |===============================                                       |  44%**  |                                                                              |====================                                                  |  28%*  |                                                                              |=================================                                     |  47%**  |                                                                              |======================                                                |  31%  |                                                                              |===================================                                   |  50%***  |                                                                              |=====================================                                 |  53%*  |                                                                              |========================                                              |  34%**  |                                                                              |=======================================                               |  56%*  |                                                                              |==========================                                            |  38%***  |                                                                              |==========================================                            |  59%  |                                                                              |============================                                          |  41%**  |                                                                              |============================================                          |  62%*|
*  |                                                                              |===============================                                       |  44%  |                                                                              |==============================================                        |  66%**|
  |                                                                              |================================================                      |  69%  |                                                                              |=================================                                     |  47%15:52:43 Optimization finished
  |                                                                              |==================================================                    |  72%Computing nearest neighbor graph
15:52:43 Optimization finished
Computing nearest neighbor graph
Joining with `by = join_by(cluster)`
  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |=====================================                                 |  53%  |                                                                              |=======================================================               |  78%  |                                                                              |=========================================================             |  81%  |                                                                              |=======================================                               |  56%  |                                                                              |===========================================================           |  84%[1] "sample..KO_rep3"
  |                                                                              |==========================================                            |  59%  |                                                                              |=============================================================         |  88%  |                                                                              |============================================                          |  62%  |                                                                              |===============================================================       |  91%  |                                                                              |==================================================================    |  94%  |                                                                              |==============================================                        |  66%  |                                                                              |====================================================================  |  97%  |                                                                              |================================================                      |  69%  |                                                                              |======================================================================| 100%
  |                                                                              |==================================================                    |  72%Computing corrected count matrix for 15669 genes
  |                                                                              |                                                                      |   0%  |                                                                              |====================================================                  |  75%  |                                                                              |=======================================================               |  78%  |                                                                              |==                                                                    |   3%  |                                                                              |====                                                                  |   6%Joining with `by = join_by(cluster)`
  |                                                                              |=========================================================             |  81%  |                                                                              |===========================================================           |  84%  |                                                                              |=======                                                               |   9%  |                                                                              |=========                                                             |  12%Computing SNN
  |                                                                              |=============================================================         |  88%[1] "sample..KO_rep1"
  |                                                                              |===========                                                           |  16%Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 10735
Number of edges: 414300

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
  |                                                                              |=============                                                         |  19%*****  |                                                                              |===============================================================       |  91%**********  |                                                                              |===============                                                       |  22%*****  |                                                                              |==================================================================    |  94%  |                                                                              |==================                                                    |  25%**********  |                                                                              |====================                                                  |  28%*****  |                                                                              |====================================================================  |  97%*****  |                                                                              |======================                                                |  31%*****  |                                                                              |======================================================================| 100%
*****|
Maximum modularity in 10 random starts: 0.8512
Number of communities: 16
Elapsed time: 2 seconds
  |                                                                              |========================                                              |  34%Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****  |                                                                              |==========================                                            |  38%*********************************************|
  |                                                                              |============================                                          |  41%Computing corrected count matrix for 15870 genes
  |                                                                              |                                                                      |   0%Computing SNN
  |                                                                              |===============================                                       |  44%Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 9957
Number of edges: 378084

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
  |                                                                              |=================================                                     |  47%*****  |                                                                              |===================================                                   |  50%**********  |                                                                              |=====================================                                 |  53%**********  |                                                                              |=======================================                               |  56%  |                                                                              |==                                                                    |   3%*****  |                                                                              |==========================================                            |  59%  |                                                                              |====                                                                  |   6%**********  |                                                                              |============================================                          |  62%  |                                                                              |=======                                                               |   9%**********|
Maximum modularity in 10 random starts: 0.8533
Number of communities: 16
Elapsed time: 2 seconds
  |                                                                              |=========                                                             |  12%Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********  |                                                                              |===========                                                           |  16%************************  |                                                                              |==============================================                        |  66%***Joining with `by = join_by(barcode)`
************|
  |                                                                              |================================================                      |  69%  |                                                                              |=============                                                         |  19%  |                                                                              |==================================================                    |  72%  |                                                                              |===============                                                       |  22%  |                                                                              |====================================================                  |  75%  |                                                                              |==================                                                    |  25%  |                                                                              |=======================================================               |  78%  |                                                                              |=========================================================             |  81%  |                                                                              |====================                                                  |  28%  |                                                                              |===========================================================           |  84%  |                                                                              |======================                                                |  31%  |                                                                              |=============================================================         |  88%  |                                                                              |========================                                              |  34%  |                                                                              |===============================================================       |  91%  |                                                                              |==========================                                            |  38%  |                                                                              |==================================================================    |  94%  |                                                                              |============================                                          |  41%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
  |                                                                              |===============================                                       |  44%Joining with `by = join_by(barcode)`
  |                                                                              |=================================                                     |  47%  |                                                                              |===================================                                   |  50%  |                                                                              |=====================================                                 |  53%  |                                                                              |=======================================                               |  56%  |                                                                              |==========================================                            |  59%  |                                                                              |============================================                          |  62%  |                                                                              |==============================================                        |  66%  |                                                                              |================================================                      |  69%  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  75%  |                                                                              |=======================================================               |  78%  |                                                                              |=========================================================             |  81%Joining with `by = join_by(cluster)`
  |                                                                              |===========================================================           |  84%  |                                                                              |=============================================================         |  88%  |                                                                              |===============================================================       |  91%[1] "sample..WT_rep3"
  |                                                                              |==================================================================    |  94%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100%
Joining with `by = join_by(cluster)`
Calculating gene attributes
[1] "sample..WT_rep2"
Wall clock passed: Time difference of 7.725527 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
Centering data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100%
Joining with `by = join_by(barcode)`
Set default assay to SCT
Calculating gene attributes
Joining with `by = join_by(barcode)`
Wall clock passed: Time difference of 8.079421 mins
Determine variable features
Set 3000 variable features
Place corrected count matrix in counts slot
[1] "Hlf"
[1] "Procr"
[1] "Fgd5"
[1] "Hoxb5"
Centering data matrix
  |                                                                              |                                                                      |   0%[1] "Kit"
  |                                                                              |==================                                                    |  25%[1] "Ly6a"
  |                                                                              |===================================                                   |  50%[1] "Ly6e"
  |                                                                              |====================================================                  |  75%[1] "Slamf1"
  |                                                                              |======================================================================| 100%
[1] "Cd34"
[1] "Irf8"
[1] "Csf1r"
Set default assay to SCT
[1] "Ly86"
[1] "Elane"
[1] "Gfi1"
[1] "Cebpe"
[1] "Hlf"
[1] "Gstm1"
[1] "Procr"
[1] "Fcnb"
[1] "Ltf"
[1] "Fgd5"
[1] "Hoxb5"
[1] "Klf1"
[1] "Kit"
[1] "Epor"
[1] "Ly6a"
[1] "Gata1"
[1] "Pf4"
[1] "Ly6e"
[1] "Itga2b"
[1] "Slamf1"
[1] "Gp1bb"
[1] "Cd34"
[1] "Prg2"
[1] "Irf8"
[1] "Prg3"
[1] "Csf1r"
[1] "Dntt"
[1] "Ly86"
[1] "Rag1"
[1] "Elane"
[1] "Ccl5"
[1] "Gfi1"
[1] "Tcf7"
[1] "Cebpe"
[1] "B2m"
[1] "Gata3"
[1] "Gstm1"
[1] "Il7r"
[1] "Fcnb"
[1] "B2m"
[1] "Ltf"
[1] "B2m"
[1] "Klf1"
[1] "Dntt"
[1] "Epor"
[1] "Rag1"
[1] "B2m"
[1] "Gata1"
[1] "Vpreb2"
[1] "Pf4"
[1] "Prdm1"
[1] "Itga2b"
[1] "Sdc1"
[1] "Prss34"
[1] "Gp1bb"
[1] "C1qb"
[1] "Prg2"
[1] "Siglech"
[1] "Prg3"
[1] "Cd74"
[1] "Dntt"
[1] "Rag1"
[1] "Ccl5"
[1] "Tcf7"
[1] "B2m"
[1] "Gata3"
[1] "Il7r"
[1] "B2m"
[1] "Cd8a"
[1] "Dntt"
[1] "Rag1"
[1] "Cd19"
[1] "Vpreb2"
[1] "Prdm1"
[1] "Sdc1"
[1] "Prss34"
[1] "C1qb"
[1] "B2m"
[1] "Cd74"
[1] "Hlf"
[1] "Procr"
[1] "Fgd5"
[1] "Hoxb5"
[1] "Kit"
[1] "Ly6a"
[1] "Ly6e"
[1] "Slamf1"
[1] "Cd34"
[1] "Irf8"
[1] "Csf1r"
[1] "Ly86"
[1] "Elane"
[1] "Gfi1"
[1] "Cebpe"
[1] "Gstm1"
[1] "Fcnb"
[1] "Ltf"
[1] "Klf1"
[1] "Epor"
[1] "Gata1"
[1] "Pf4"
[1] "Itga2b"
[1] "Gp1bb"
[1] "Prg2"
[1] "Prg3"
[1] "Dntt"
[1] "Hlf"
PC_ 1 
Positive:  Elane, Prtn3, Ctsg, S100a8, Igkc, Mpo, Ms4a3, Lcn2, Srgn, Camp 
	   S100a9, Rpl41, Wfdc21, Tspo, Hp, Cyba, Rplp1, Pglyrp1, Ighm, Tmsb4x 
	   Slpi, Ngp, Cd63, Nkg7, Ifitm1, Plac8, Rps12, Ssr4, Rps23, Atp6v0c 
Negative:  Malat1, mt-Co1, AY036118, mt-Co2, Xist, mt-Nd1, mt-Nd4, mt-Atp6, Gm42418, mt-Nd5 
	   mt-Nd2, mt-Cytb, Ncl, mt-Co3, Gm26917, Hsp90ab1, mt-Nd3, Tsix, Hmgb1, Kcnq1ot1 
	   Angpt1, Prrc2c, mt-Nd4l, Itga4, Ermap, Hist1h2ab, Hist1h1e, Mki67, Arl6ip1, Mbnl1 
PC_ 2 
Positive:  Elane, Gm42418, S100a8, Lcn2, AY036118, Ctsg, Prtn3, Ngp, Mpo, Calr 
	   Hp, S100a9, F630028O10Rik, Fcnb, Wfdc21, Camp, Pglyrp1, Igsf6, Alas1, Dstn 
	   Ms4a3, Atp8b4, Lrg1, Tmx4, B4galt6, Gm26917, Lars2, Cybb, Nin, App 
Negative:  Igkc, Ighm, Rplp1, Rpl41, Ctla2a, Ifitm1, Rps15a, Rps20, Rps12, Rps26 
	   Rps21, Rpl32, Rps14, Rps18, Mt2, Rpl37a, Jchain, Rps16, Rpl27a, Rpl18 
	   Rps23, Rpl23, Aqp1, Hspe1, Hbb-bt, Blvrb, Rps27a, Cldn13, Vamp5, Tmem14c 
PC_ 3 
Positive:  Elane, mt-Nd1, Ctsg, Prtn3, Ermap, Mpo, Ms4a3, Calr, Hspa5, mt-Nd2 
	   Aqp1, Tfrc, Atp1b2, Abcb4, Canx, mt-Cytb, Atp6v0c, Hspd1, Cpox, Hsp90ab1 
	   mt-Atp6, Manf, Tmem14c, Atp13a3, F630028O10Rik, B4galt6, P4hb, Steap3, Ncl, Cldn13 
Negative:  Ngp, S100a8, S100a9, Camp, Ltf, Lyz2, Chil3, Ifitm6, Lcn2, Retnlg 
	   Ctla2a, Cd177, S100a6, Adgrl4, Igkc, Asprv1, Mmp9, Cd52, Cstdc5, Malat1 
	   Angpt1, Ifi203, Adgrg1, Ifitm1, Lrg1, Ltb, Xist, Ptprcap, Slfn4, Mmp8 
PC_ 4 
Positive:  Ifitm1, Elane, Ctsg, Prtn3, Srgn, Adgrl4, H2afy, Cmtm7, Ccl9, Ctla2a 
	   Emb, Ccr2, Mpo, Cd34, Angpt1, Ms4a3, Sell, Ifi203, Xist, Ms4a6c 
	   Ffar2, Ramp1, Malat1, Gm2a, Calr, Sox4, Fxyd5, Napsa, Ptpre, Plac8 
Negative:  S100a8, Ngp, S100a9, Camp, mt-Nd1, Ltf, Ermap, Chil3, Lcn2, Aqp1 
	   Atp1b2, Ifitm6, Abcb4, mt-Cytb, Lyz2, Cd177, Mt2, Retnlg, Cpox, mt-Nd2 
	   Tspan33, Cldn13, C1qtnf12, Rhd, Tfrc, mt-Atp6, Rhag, Cd24a, Tnfaip2, Tmem14c 
PC_ 5 
Positive:  mt-Cytb, mt-Nd1, mt-Co2, mt-Atp6, mt-Co3, mt-Nd2, mt-Nd4, mt-Nd3, mt-Co1, Rpsa 
	   Elane, Ccl9, Prtn3, mt-Nd5, Cmtm7, Ly6e, Ccr2, Ifitm1, Gm47283, Atp6v0c 
	   Ffar2, Laptm5, Adgrg1, Cd34, Ms4a6c, Lyz2, Adgrl4, Serpina3g, Csf2rb, Alox5ap 
Negative:  Igkc, AY036118, Gm42418, Ighm, Ncl, Jchain, Hist1h4d, Iglc1, Calr, Hist1h2ae 
	   Lars2, Hist2h2ac, Anp32b, Hist1h2ab, Hist1h1e, Hist1h3e, Hist1h3c, Cd74, Malat1, Hist1h3f 
	   Hist1h1b, Actb, Ighg3, Igkv12-44, Hist1h2ak, Hmgb1, Hnrnpa3, Set, Hist1h4c, Hist2h2bb 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
15:54:47 UMAP embedding parameters a = 0.9922 b = 1.112
[1] "Rag1"
15:54:47 Read 15774 rows and found 30 numeric columns
15:54:47 Using Annoy for neighbor search, n_neighbors = 30
15:54:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************[1] "Procr"
************[1] "Ccl5"
***************[1] "Hlf"
**|
[1] "Fgd5"
[1] "Tcf7"
[1] "Procr"
[1] "B2m"
[1] "Hoxb5"
[1] "Gata3"
[1] "Fgd5"
[1] "Kit"
[1] "Il7r"
[1] "Hoxb5"
[1] "Ly6a"
[1] "Cd4"
[1] "Kit"
[1] "Ly6e"
[1] "Cd8a"
[1] "Slamf1"
[1] "Ly6a"
[1] "Dntt"
[1] "Cd34"
[1] "Rag1"
[1] "Ly6e"
15:54:51 Writing NN index file to temp file /tmp/Rtmppee8WT/file6eef2f9eccb9
15:54:51 Searching Annoy index using 1 thread, search_k = 3000
[1] "Irf8"
[1] "Cd19"
[1] "Slamf1"
[1] "Vpreb2"
[1] "Csf1r"
[1] "Prdm1"
[1] "Cd34"
[1] "Ly86"
[1] "Sdc1"
[1] "Irf8"
[1] "Elane"
[1] "Csf1r"
[1] "Prss34"
[1] "Gfi1"
[1] "C1qb"
[1] "Ly86"
[1] "Cebpe"
[1] "Siglech"
[1] "Elane"
[1] "Gstm1"
[1] "Cd74"
[1] "Gfi1"
[1] "Fcnb"
[1] "Ltf"
[1] "Cebpe"
[1] "Klf1"
[1] "Gstm1"
[1] "Epor"
[1] "Fcnb"
[1] "Gata1"
[1] "Pf4"
[1] "Ltf"
[1] "Itga2b"
[1] "Klf1"
[1] "Gp1bb"
[1] "Epor"
[1] "Prg2"
[1] "Gata1"
[1] "Prg3"
[1] "Pf4"
[1] "Hlf"
[1] "Dntt"
[1] "Itga2b"
[1] "Procr"
[1] "Rag1"
[1] "Gp1bb"
[1] "Fgd5"
[1] "Ccl5"
[1] "Prg2"
[1] "Hoxb5"
[1] "Tcf7"
[1] "Prg3"
[1] "Kit"
[1] "B2m"
[1] "Gata3"
[1] "Dntt"
[1] "Ly6a"
[1] "Il7r"
[1] "Ly6e"
[1] "Rag1"
[1] "Cd4"
[1] "Ccl5"
[1] "Slamf1"
[1] "Cd8a"
[1] "Tcf7"
[1] "Cd34"
[1] "Dntt"
[1] "B2m"
[1] "Irf8"
[1] "Rag1"
[1] "Gata3"
[1] "Csf1r"
[1] "Cd19"
15:55:04 Annoy recall = 100%
[1] "Il7r"
[1] "Ly86"
[1] "Vpreb2"
[1] "B2m"
[1] "Elane"
[1] "Prdm1"
[1] "B2m"
[1] "Gfi1"
[1] "Sdc1"
[1] "Dntt"
[1] "Prss34"
[1] "Cebpe"
15:55:06 Commencing smooth kNN distance calibration using 1 thread
[1] "Rag1"
[1] "C1qb"
[1] "Gstm1"
[1] "B2m"
[1] "Siglech"
[1] "Fcnb"
[1] "Cd74"
[1] "Vpreb2"
[1] "Ltf"
[1] "Prdm1"
[1] "Sdc1"
[1] "Klf1"
[1] "Prss34"
[1] "Epor"
[1] "C1qb"
[1] "Gata1"
15:55:10 Initializing from normalized Laplacian + noise
[1] "Pf4"
[1] "Siglech"
[1] "Itga2b"
[1] "Cd74"
15:55:11 Commencing optimization for 200 epochs, with 748476 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Gp1bb"
**[1] "Prg2"
*[1] "Prg3"
[1] "Dntt"
*[1] "Rag1"
PC_ 1 
Positive:  Elane, Mpo, Prtn3, Ctsg, Srgn, Ly6c2, Ms4a3, F630028O10Rik, S100a8, Calr 
	   Nkg7, Hp, Clec12a, Atp8b4, Wfdc21, Tmsb4x, Fcgr3, Prss57, Cd63, Pglyrp1 
	   Alas1, B4galt6, P4hb, Hspa5, Gstm1, S100a9, Plac8, Dmkn, Igsf6, Cst7 
Negative:  C1qtnf12, Ermap, Aqp1, Car2, Apoe, Car1, Abcb4, Atp1b2, Ces2g, Podxl 
	   Tspan33, Cpox, Tfrc, Ctla2a, Cldn13, mt-Co1, Rhag, Aplp2, Fth1, Cpd 
	   Tmem56, Tspo2, Tspan13, Blvrb, Ugcg, Rhd, Bcl11a, Adgrg1, Minpp1, Paqr9 
PC_ 2 
Positive:  Apoe, Ctla2a, Adgrl4, Ifitm1, Adgrg1, Cd34, Tmem176b, Ly6a, H2afy, Angpt1 
	   Ifitm3, Ptprcap, Pim1, Ifi203, Ltb, Sox4, Vldlr, mt-Co1, Tmem176a, Wfdc17 
	   Pf4, B2m, Ms4a6c, Selp, Emb, H2-K1, Muc13, Ikzf2, Itga2b, Serpina3g 
Negative:  C1qtnf12, Ermap, Aqp1, Elane, Tfrc, mt-Nd1, Atp1b2, Cpd, Car2, Cpox 
	   Tspan33, mt-Nd2, Abcb4, Podxl, Cldn13, Tmem56, Car1, Cd24a, Gm26917, Paqr9 
	   Rhag, Ces2g, Rhd, Aplp2, Tspo2, Prtn3, Tmem14c, Minpp1, Mpo, mt-Cytb 
PC_ 3 
Positive:  Ccr2, Emb, H2afy, Ms4a6c, Calr, Cd34, Hsp90ab1, Sell, Ccl9, Ifitm1 
	   Irf8, Gm26917, St8sia4, Cd53, Ctsz, Hspa5, Gria3, Igfbp4, Flt3, Plppr3 
	   Tmem173, Ly6e, Milr1, Lgals1, Sox4, Cd93, Ly86, Gm2a, Rrbp1, Adgrl4 
Negative:  Pf4, Apoe, S100a8, Elane, Vwf, Itga2b, S100a9, Ctla2a, Pbx1, Timp3 
	   F2r, Srgn, Gp1bb, Slc14a1, Itgb3, Mmrn1, Treml1, Prtn3, Wfdc21, Thbs1 
	   Fcnb, Plxnc1, Cd9, Gp9, Slc18a2, Angpt1, Pde10a, F2rl2, Mfsd2b, Cd63 
PC_ 4 
Positive:  Pf4, Vwf, Ccr2, Itga2b, Calr, Timp3, Gp1bb, Emb, Thbs1, Itgb3 
	   Pbx1, Gm26917, Treml1, Hspa5, F630028O10Rik, mt-Nd1, F2rl2, Mmrn1, Hsp90ab1, Pde10a 
	   F2r, Slc35d3, Slc14a1, Mef2c, Ctsz, Hsp90b1, Manf, Rrbp1, Cavin2, Cd9 
Negative:  S100a8, S100a9, Elane, Ltb, Ly6a, Adgrl4, Wfdc17, Fcnb, mt-Co1, Vldlr 
	   C1qtnf12, Wfdc21, Ifi203, Hlf, Camp, Ermap, Srgn, Pim1, Tspan13, Prtn3 
	   Gimap6, Car2, Pglyrp1, Rps9, Hbb-bt, Gcnt2, Lipg, Cd63, Flt3, Dntt 
PC_ 5 
Positive:  Pf4, Vwf, S100a8, Ltb, Timp3, Ly6a, S100a9, Ly6c2, Wfdc17, Itgb3 
	   Thbs1, Flt3, Emb, Ms4a6c, Mmrn1, Tbxa2r, Gp1bb, Slc35d3, Irf8, Dntt 
	   Mef2c, C1qtnf12, Ifi203, Ctss, H2afy, Pde10a, Ighm, Ccr2, Trpc6, Treml1 
Negative:  Apoe, Ms4a2, Cpa3, Fcer1a, Slc18a2, Srgn, Slc22a3, Fut8, Calr, Ikzf2 
	   Cd63, Ifitm1, Csf2rb, Gata2, Csf2rb2, Lmo4, Muc13, Gm17590, Slc7a8, Slc45a3 
	   Rnase12, Il1rl1, Csrp3, Tent5a, Fgf3, Cd55, Galnt6, Ctla2a, Itga4, Nkg7 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
15:55:14 UMAP embedding parameters a = 0.9922 b = 1.112
15:55:14 Read 15642 rows and found 30 numeric columns
*15:55:14 Using Annoy for neighbor search, n_neighbors = 30
15:55:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********[1] "Ccl5"
*****************************************|
[1] "Tcf7"
*[1] "B2m"
*[1] "Gata3"
*[1] "Il7r"
*[1] "B2m"
*[1] "Cd8a"
[1] "Dntt"
15:55:18 Writing NN index file to temp file /tmp/Rtmppee8WT/file6ee82f9eccb9
15:55:18 Searching Annoy index using 1 thread, search_k = 3000
*[1] "Rag1"
*[1] "Cd19"
[1] "Vpreb2"
**[1] "Prdm1"
[1] "Sdc1"
*[1] "Prss34"
*[1] "C1qb"
*[1] "B2m"
*[1] "Cd74"
*********[1] "Hlf"
*[1] "Procr"
*[1] "Fgd5"
*15:55:30 Annoy recall = 100%
[1] "Hoxb5"
*[1] "Kit"
*[1] "Ly6a"
[1] "Ly6e"
*[1] "Slamf1"
*15:55:32 Commencing smooth kNN distance calibration using 1 thread
[1] "Cd34"
*[1] "Irf8"
*[1] "Csf1r"
[1] "Ly86"
*[1] "Elane"
*[1] "Gfi1"
[1] "Cebpe"
*[1] "Gstm1"
15:55:35 Initializing from normalized Laplacian + noise
*[1] "Fcnb"
[1] "Ltf"
*15:55:36 Commencing optimization for 200 epochs, with 703224 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1] "Klf1"
*[1] "Epor"
*[1] "Gata1"
**[1] "Pf4"
**[1] "Itga2b"
[1] "Hlf"
*[1] "Gp1bb"
*[1] "Procr"
[1] "Prg2"
*[1] "Prg3"
[1] "Fgd5"
*[1] "Hoxb5"
[1] "Dntt"
**[1] "Kit"
[1] "Rag1"
**[1] "Ly6a"
[1] "Ccl5"
[1] "Ly6e"
[1] "Tcf7"
*|
*[1] "B2m"
[1] "Slamf1"
*[1] "Gata3"
[1] "Cd34"
[1] "Il7r"
15:55:42 Optimization finished
Computing nearest neighbor graph
*[1] "Irf8"
[1] "Cd4"
[1] "Cd8a"
[1] "Csf1r"
*[1] "Dntt"
[1] "Ly86"
[1] "Rag1"
*[1] "Elane"
[1] "Cd19"
[1] "Vpreb2"
[1] "Gfi1"
*[1] "Prdm1"
[1] "Cebpe"
[1] "Sdc1"
*[1] "Prss34"
[1] "Gstm1"
*[1] "C1qb"
[1] "Fcnb"
[1] "Mki67"
[1] "Siglech"
[1] "Ltf"
[1] "Cd74"
*[1] "Cdk1"
[1] "Klf1"
[1] "Epor"
*[1] "Top2a"
[1] "Gata1"
*[1] "Pf4"
*[1] "Itga2b"
[1] "Gp1bb"
*[1] "Prg2"
*[1] "Prg3"
*[1] "Dntt"
[1] "Rag1"
*[1] "Ccl5"
[1] "Mki67"
*[1] "Tcf7"
[1] "Cdk1"
*[1] "B2m"
*[1] "Top2a"
[1] "Gata3"
*[1] "Il7r"
*[1] "Cd4"
*[1] "Cd8a"
*[1] "Dntt"
*[1] "Rag1"
[1] "B2m"
[1] "Cd19"
*[1] "Mki67"
[1] "B2m"
[1] "Vpreb2"
*[1] "B2m"
[1] "Cdk1"
[1] "Prdm1"
*[1] "B2m"
[1] "Top2a"
[1] "Sdc1"
[1] "Itgax"
*[1] "Prss34"
[1] "Itgam"
*[1] "C1qb"
[1] "Ly6c1"
*[1] "Siglech"
[1] "Ly6c2"
[1] "Cd74"
*[1] "B2m"
*[1] "Klrb1b"
[1] "Hba-a1"
*[1] "Mki67"
[1] "Prss34"
*[1] "Cdk1"
*[1] "Top2a"
*****[1] "Cd19"
*[1] "B2m"
*|
[1] "B2m"
[1] "Cd8a"
15:56:09 Optimization finished
Computing nearest neighbor graph
[1] "Itgax"
[1] "Itgam"
[1] "Ly6c1"
[1] "Ly6c2"
[1] "Ly6g"
[1] "Klrb1b"
[1] "B2m"
[1] "Hba-a1"
[1] "B2m"
[1] "Prss34"
[1] "B2m"
[1] "B2m"
[1] "Itgax"
[1] "Itgam"
[1] "Mki67"
[1] "Ly6c1"
[1] "Cdk1"
[1] "Ly6c2"
[1] "Top2a"
[1] "B2m"
[1] "Klrb1b"
[1] "Hba-a1"
[1] "Prss34"
[1] "Mki67"
[1] "Cdk1"
[1] "Top2a"
Computing SNN
[1] "Cd19"
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 15774
Number of edges: 545641

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "B2m"
*****[1] "B2m"
*****[1] "Cd19"
[1] "Cd8a"
*****[1] "B2m"
[1] "Itgax"
*****[1] "Itgam"
*****[1] "Cd4"
[1] "Ly6c1"
[1] "Cd8a"
*****[1] "Ly6c2"
*****[1] "Itgax"
[1] "Ly6g"
*****[1] "Klrb1b"
[1] "Itgam"
[1] "Hba-a1"
*****[1] "Ly6c1"
*****|
Maximum modularity in 10 random starts: 0.8187
Number of communities: 15
Elapsed time: 4 seconds
[1] "Ly6a"
[1] "Prss34"
Performing log-normalization
[1] "Ly6c2"
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************[1] "Ly6g"
*********[1] "Kit"
********************[1] "B2m"
*********|
[1] "Slamf1"
[1] "Hba-a1"
[1] "Prss34"
[1] "Cd48"
[1] "Cd34"
[1] "Fcgr3"
[1] "Fcgr2b"
[1] "Hlf"
[1] "Mki67"
[1] "Cd19"
[1] "Cdk1"
[1] "Ly6a"
[1] "B2m"
[1] "Top2a"
[1] "Kit"
[1] "Ly6a"
[1] "Cd4"
[1] "Slamf1"
[1] "Cd8a"
[1] "Kit"
[1] "Cd48"
[1] "Slamf1"
[1] "Itgax"
[1] "Cd34"
[1] "Cd48"
[1] "Itgam"
Computing SNN
[1] "Fcgr3"
[1] "Ly6c1"
[1] "Cd34"
[1] "Fcgr2b"
[1] "Ly6c2"
[1] "Hlf"
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 15642
Number of edges: 584405

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Fcgr3"
[1] "Ly6g"
[1] "Mki67"
[1] "Fcgr2b"
*****[1] "B2m"
[1] "Hlf"
[1] "Cdk1"
*****[1] "Hba-a1"
[1] "Top2a"
*****[1] "Prss34"
***********************************|
Maximum modularity in 10 random starts: 0.8428
Number of communities: 16
Elapsed time: 4 seconds
Performing log-normalization
[1] "Cd19"
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********************[1] "B2m"
**************************[1] "Cd4"
****|
[1] "Cd8a"
[1] "Itgax"
[1] "Itgam"
[1] "Flt3"
[1] "Ly6c1"
[1] "Il7r"
[1] "Ly6c2"
[1] "Ly6a"
[1] "Dntt"
[1] "Ly6g"
[1] "B2m"
[1] "Kit"
[1] "Hba-a1"
[1] "Slamf1"
[1] "Prss34"
[1] "Cd48"
[1] "Cd34"
[1] "Ly6a"
[1] "Fcgr3"
[1] "Kit"
[1] "Fcgr2b"
[1] "Slamf1"
Joining with `by = join_by(cluster)`
[1] "Hlf"
[1] "Flt3"
[1] "Cd48"
[1] "Il7r"
[1] "Cd34"
[1] "Dntt"
[1] "Fcgr3"
[1] "Fcgr2b"
[1] "Hlf"
[1] "sample..KO_rep2"
[1] "Irf8"
[1] "Gata1"
[1] "Gata2"
[1] "Cebpa"
[1] "Runx1"
[1] "Gfi1"
[1] "Flt3"
[1] "Cebpe"
[1] "Il7r"
[1] "Itgam"
[1] "Cd19"
[1] "Dntt"
[1] "B2m"
[1] "Ly6a"
[1] "B2m"
[1] "Tlr4"
[1] "Cd4"
[1] "Kit"
[1] "Il1b"
[1] "Cd8a"
[1] "Slamf1"
[1] "S100a8"
[1] "Itgax"
[1] "Cd48"
[1] "Spi1"
[1] "Itgam"
[1] "Cd34"
[1] "Fcgr3"
[1] "Ly6c1"
[1] "Fcgr2b"
[1] "Ly6c2"
[1] "Hlf"
[1] "Ly6g"
[1] "Flt3"
[1] "B2m"
[1] "Il7r"
[1] "Hba-a1"
[1] "Dntt"
[1] "Prss34"
[1] "Irf8"
[1] "Gata1"
[1] "Flt3"
[1] "Gata2"
[1] "Il7r"
[1] "Cebpa"
[1] "Dntt"
[1] "Runx1"
Joining with `by = join_by(barcode)`
[1] "Gfi1"
Joining with `by = join_by(cluster)`
[1] "Irf8"
[1] "Cebpe"
[1] "Gata1"
[1] "Itgam"
[1] "Mmp9"
[1] "Gata2"
[1] "Tlr4"
[1] "Cebpa"
[1] "sample..WT_rep1"
[1] "Flt3"
[1] "Il1b"
[1] "Runx1"
[1] "Il7r"
[1] "S100a8"
[1] "Ly6a"
[1] "Gfi1"
[1] "Dntt"
[1] "Spi1"
[1] "Cebpe"
[1] "Kit"
[1] "Itgam"
[1] "Slamf1"
[1] "B2m"
[1] "Cd48"
[1] "Tlr4"
[1] "Cd34"
[1] "Il1b"
[1] "Fcgr3"
[1] "S100a8"
[1] "Fcgr2b"
[1] "Spi1"
[1] "Irf8"
[1] "Hlf"
[1] "Gata1"
[1] "Gata2"
[1] "Cebpa"
[1] "Runx1"
[1] "Gfi1"
[1] "Cebpe"
[1] "Itgam"
[1] "Mmp9"
[1] "Tlr4"
[1] "Il1b"
[1] "S100a8"
[1] "Spi1"
[1] "Ly6a"
[1] "Kit"
[1] "Irf8"
[1] "Slamf1"
[1] "Gata1"
[1] "Cd48"
[1] "Irf8"
[1] "Gata2"
[1] "Cd34"
[1] "Spi1"
[1] "Cebpa"
[1] "Fcgr3"
[1] "Gata2"
[1] "Runx1"
[1] "Fcgr2b"
[1] "Klf4"
[1] "Gfi1"
[1] "Hlf"
[1] "Cxcr4"
[1] "Ccr2"
[1] "Cebpe"
[1] "Itgam"
[1] "Mmp9"
[1] "Tlr4"
[1] "Il1b"
Joining with `by = join_by(barcode)`
[1] "S100a8"
[1] "Irf8"
[1] "Spi1"
[1] "Gata1"
[1] "Gata2"
[1] "Cebpa"
[1] "Irf8"
[1] "Runx1"
[1] "Spi1"
[1] "Gfi1"
[1] "Gata2"
[1] "Cebpe"
[1] "Klf4"
[1] "Itgam"
[1] "Cxcr4"
[1] "Flt3"
[1] "Mmp9"
[1] "Ccr2"
[1] "Il7r"
[1] "Tlr4"
[1] "Il1b"
[1] "Dntt"
[1] "S100a8"
[1] "Spi1"
[1] "Flt3"
[1] "Il7r"
[1] "Irf8"
[1] "Dntt"
[1] "B2m"
[1] "Batf3"
[1] "Irf8"
[1] "Zbtb46"
[1] "Itgax"
[1] "Spi1"
[1] "Sirpa"
[1] "Gata2"
[1] "Csf1r"
[1] "Klf4"
[1] "Siglech"
[1] "Irf8"
[1] "Cxcr4"
[1] "Ccr2"
[1] "Gata1"
[1] "Irf8"
[1] "Gata2"
[1] "Spi1"
[1] "Cebpa"
[1] "Gata2"
[1] "Runx1"
[1] "Klf4"
[1] "Gfi1"
[1] "Cxcr4"
[1] "Ccr2"
[1] "Cebpe"
[1] "Itgam"
[1] "Mmp9"
[1] "Tlr4"
[1] "Il1b"
[1] "S100a8"
[1] "Irf8"
[1] "Irf8"
[1] "Spi1"
[1] "B2m"
[1] "Spi1"
[1] "Batf3"
[1] "Gata2"
[1] "Zbtb46"
[1] "Irf8"
[1] "Klf4"
[1] "Itgax"
[1] "Spi1"
[1] "Cxcr4"
[1] "Sirpa"
[1] "Gata2"
[1] "Ccr2"
[1] "Csf1r"
[1] "Klf4"
[1] "Siglech"
[1] "Cxcr4"
[1] "Ccr2"
[1] "Hlf"
[1] "Procr"
[1] "Fgd5"
[1] "Hoxb5"
[1] "Irf8"
[1] "Kit"
[1] "Irf8"
[1] "Klf1"
[1] "Irf4"
[1] "Ly6a"
[1] "Epor"
[1] "Irf4"
[1] "Ly6e"
[1] "Batf3"
[1] "Car1"
[1] "Batf3"
[1] "Slamf1"
[1] "Zbtb46"
[1] "Zbtb46"
[1] "Mt2"
[1] "Cd34"
[1] "Itgax"
[1] "Rhd"
[1] "Itgax"
[1] "Sirpa"
[1] "Irf8"
[1] "Irf8"
[1] "Sirpa"
[1] "Csf1r"
[1] "Gata1"
[1] "Csf1r"
[1] "Csf1r"
[1] "Siglech"
[1] "Ly86"
[1] "Gata2"
[1] "B2m"
[1] "Elane"
[1] "Cebpa"
[1] "Gfi1"
[1] "Runx1"
[1] "Cebpe"
[1] "Gfi1"
[1] "Gstm1"
[1] "Cebpe"
[1] "Fcnb"
[1] "Ltf"
[1] "Itgam"
[1] "Klf1"
[1] "Klf1"
[1] "Mmp9"
[1] "Epor"
[1] "Tlr4"
[1] "Epor"
[1] "Gata1"
[1] "Il1b"
[1] "Pf4"
[1] "Car1"
[1] "Mt2"
[1] "Itga2b"
[1] "Irf8"
[1] "Rhd"
[1] "Gp1bb"
[1] "Prg2"
[1] "Irf4"
[1] "Prg3"
[1] "Batf3"
[1] "Zbtb46"
[1] "Dntt"
[1] "Itgax"
[1] "B2m"
[1] "Irf8"
[1] "S100a8"
[1] "Sirpa"
[1] "Ccl5"
[1] "Irf4"
[1] "Spi1"
[1] "Csf1r"
[1] "Tcf7"
[1] "Batf3"
[1] "Siglech"
[1] "B2m"
[1] "Zbtb46"
[1] "Gata3"
[1] "Itgax"
[1] "Pf4"
[1] "Il7r"
[1] "Sirpa"
[1] "B2m"
[1] "Itga2b"
[1] "Csf1r"
[1] "Cd8a"
[1] "B2m"
[1] "Vwf"
[1] "Dntt"
[1] "B2m"
[1] "Cd19"
[1] "Vpreb2"
[1] "Prdm1"
[1] "Sdc1"
[1] "Prss34"
[1] "Pf4"
[1] "Klf1"
[1] "C1qb"
[1] "Epor"
[1] "B2m"
[1] "Itga2b"
[1] "Car1"
[1] "Vwf"
[1] "Cd74"
[1] "Mt2"
[1] "Rhd"
[1] "Klf1"
[1] "Gata1"
[1] "Epor"
[1] "Irf8"
[1] "Gata2"
[1] "Car1"
[1] "Spi1"
[1] "Gfi1b"
[1] "Mt2"
[1] "Gata2"
[1] "Rhd"
[1] "Mfsd2b"
[1] "Klf4"
[1] "Klf1"
[1] "Cxcr4"
[1] "Epor"
[1] "Ccr2"
[1] "Car1"
[1] "Mt2"
[1] "Rhd"
[1] "Gata1"
[1] "Gata2"
[1] "Gfi1b"
[1] "Klf1"
[1] "Mfsd2b"
[1] "Epor"
[1] "Pf4"
[1] "Car1"
[1] "Itga2b"
[1] "Irf8"
[1] "Mt2"
[1] "Vwf"
[1] "Spi1"
[1] "Rhd"
[1] "Gata2"
[1] "Klf4"
[1] "Flt3"
[1] "Cxcr4"
[1] "Klrb1c"
[1] "Ccr2"
[1] "Pf4"
[1] "B2m"
[1] "Il2rb"
[1] "Itga2b"
[1] "Vwf"
[1] "Il7r"
[1] "Cd27"
[1] "Itgam"
[1] "B2m"
[1] "B2m"
[1] "Pf4"
[1] "B2m"
[1] "Itga2b"
[1] "Rora"
[1] "Gata1"
[1] "Tmem176a"
[1] "Vwf"
[1] "Gata2"
[1] "Cxcr6"
[1] "Gfi1b"
[1] "Irf8"
[1] "Mfsd2b"
[1] "Irf4"
[1] "Batf3"
[1] "Zbtb46"
[1] "Itgax"
[1] "Pf4"
[1] "Sirpa"
[1] "Csf1r"
[1] "Itga2b"
[1] "Siglech"
[1] "Vwf"
[1] "Gata1"
[1] "Gata2"
[1] "Gfi1b"
[1] "Mfsd2b"
[1] "Hlf"
[1] "Gata1"
[1] "Gata2"
[1] "Procr"
[1] "Gfi1b"
[1] "Flt3"
[1] "Mfsd2b"
[1] "Flt3"
[1] "Klrb1c"
[1] "B2m"
[1] "Klrb1c"
[1] "Il2rb"
[1] "Ncr1"
[1] "Il7r"
[1] "Il2rb"
[1] "Cd27"
[1] "Il7r"
[1] "Irf8"
[1] "Fgd5"
[1] "Itgam"
[1] "Cd27"
[1] "Irf4"
[1] "B2m"
[1] "Itgam"
[1] "Hoxb5"
[1] "B2m"
[1] "Batf3"
[1] "B2m"
[1] "Kit"
[1] "B2m"
[1] "Zbtb46"
[1] "B2m"
[1] "Gata1"
[1] "Rora"
[1] "B2m"
[1] "Ly6a"
[1] "Itgax"
[1] "Gata2"
[1] "Rora"
[1] "Tmem176a"
[1] "Hlf"
[1] "Sirpa"
[1] "Tmem176a"
[1] "Ly6e"
[1] "Cxcr6"
[1] "Procr"
[1] "Gfi1b"
[1] "Cxcr6"
[1] "Csf1r"
[1] "Mfsd2b"
[1] "Fgd5"
[1] "Slamf1"
[1] "Siglech"
[1] "Hoxb5"
[1] "Cd34"
[1] "Kit"
[1] "Ly6a"
[1] "Irf8"
[1] "Ly6e"
[1] "Slamf1"
[1] "Csf1r"
[1] "Cd34"
[1] "Ly86"
[1] "Irf8"
[1] "Elane"
[1] "Csf1r"
[1] "Flt3"
[1] "Ly86"
[1] "Klrb1c"
[1] "Gfi1"
[1] "Elane"
[1] "Ncr1"
[1] "Cebpe"
[1] "Il2rb"
[1] "Gfi1"
[1] "Il7r"
[1] "Gstm1"
[1] "Cebpe"
[1] "Gstm1"
[1] "Cd27"
[1] "Fcnb"
[1] "Klf1"
[1] "Fcnb"
[1] "Itgam"
[1] "Ltf"
[1] "Epor"
[1] "Ltf"
[1] "B2m"
[1] "Flt3"
[1] "Klf1"
[1] "B2m"
[1] "Car1"
[1] "Epor"
[1] "Klrb1c"
[1] "Klf1"
[1] "B2m"
[1] "B2m"
[1] "Ncr1"
[1] "Gata1"
[1] "Mt2"
[1] "B2m"
[1] "B2m"
[1] "Pf4"
[1] "Epor"
[1] "Il2rb"
[1] "B2m"
[1] "Rhd"
[1] "Itga2b"
[1] "Rora"
[1] "Il7r"
[1] "B2m"
[1] "Gata1"
[1] "Gp1bb"
[1] "Cd27"
[1] "Tmem176a"
[1] "B2m"
[1] "Prg2"
[1] "Pf4"
[1] "Itgam"
[1] "B2m"
[1] "Cxcr6"
[1] "B2m"
[1] "Prg3"
[1] "Itga2b"
[1] "B2m"
[1] "B2m"
[1] "Dntt"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Gp1bb"
[1] "Rora"
[1] "Ccl5"
[1] "Tmem176a"
[1] "Prg2"
[1] "Cxcr6"
[1] "Tcf7"
[1] "B2m"
[1] "Prg3"
[1] "Gata3"
[1] "Il7r"
[1] "Dntt"
[1] "Klf1"
[1] "B2m"
[1] "Epor"
[1] "Rag1"
[1] "Cd8a"
[1] "Car1"
[1] "Ccl5"
[1] "Dntt"
[1] "Mt2"
[1] "Tcf7"
[1] "B2m"
[1] "Rhd"
[1] "Cd19"
[1] "B2m"
[1] "Vpreb2"
[1] "Gata3"
[1] "Prdm1"
[1] "Il7r"
[1] "Sdc1"
[1] "B2m"
[1] "Prss34"
[1] "B2m"
[1] "Cd4"
[1] "B2m"
[1] "C1qb"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Dntt"
[1] "Cd74"
[1] "B2m"
[1] "Rag1"
[1] "B2m"
[1] "B2m"
[1] "Pf4"
[1] "B2m"
[1] "Cd19"
[1] "B2m"
[1] "B2m"
[1] "Itga2b"
[1] "Vpreb2"
[1] "B2m"
[1] "B2m"
[1] "Flt3"
[1] "Vwf"
[1] "B2m"
[1] "Prdm1"
[1] "Klrb1c"
[1] "B2m"
[1] "Ncr1"
[1] "Sdc1"
[1] "B2m"
[1] "Il2rb"
[1] "Prss34"
[1] "B2m"
[1] "Il7r"
[1] "B2m"
[1] "C1qb"
[1] "B2m"
[1] "Cd27"
[1] "Siglech"
[1] "Itgam"
[1] "Pf4"
[1] "Cd74"
[1] "B2m"
[1] "Itga2b"
[1] "B2m"
[1] "Vwf"
[1] "B2m"
[1] "Rora"
[1] "Tmem176a"
[1] "B2m"
[1] "Cxcr6"
[1] "Rora"
[1] "Zbtb16"
[1] "Gata1"
[1] "Gata3"
[1] "Gata2"
[1] "Gata3"
[1] "Gfi1b"
[1] "Arg1"
[1] "Mfsd2b"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "B2m"
[1] "Gata1"
[1] "Cd27"
[1] "B2m"
[1] "Gata2"
[1] "B2m"
[1] "Gfi1b"
[1] "B2m"
[1] "Mfsd2b"
[1] "B2m"
[1] "Gzma"
[1] "Itga2"
[1] "Itga1"
[1] "B2m"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Flt3"
[1] "B2m"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "B2m"
[1] "Zbtb16"
[1] "Il2rb"
[1] "Gata3"
[1] "B2m"
[1] "Il7r"
[1] "Gata3"
[1] "Arg1"
[1] "B2m"
[1] "Cd27"
[1] "B2m"
[1] "B2m"
[1] "Itgam"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Ncr1"
[1] "B2m"
[1] "B2m"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "B2m"
[1] "Il2rb"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "Cd27"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Itga2"
[1] "Itga1"
[1] "B2m"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "B2m"
[1] "Cd4"
[1] "Cd8a"
[1] "Mki67"
[1] "Cdk1"
[1] "B2m"
[1] "Top2a"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Flt3"
[1] "B2m"
[1] "Mki67"
[1] "Klrb1c"
[1] "Cdk1"
[1] "B2m"
[1] "B2m"
[1] "Top2a"
[1] "Rora"
[1] "Il2rb"
[1] "Zbtb16"
[1] "Il7r"
[1] "Cd27"
[1] "Gata3"
[1] "Itgam"
[1] "Gata3"
[1] "B2m"
[1] "Arg1"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Tmem176a"
[1] "B2m"
[1] "Cd19"
[1] "Cxcr6"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "B2m"
[1] "Cd8a"
[1] "Cd27"
[1] "Rora"
[1] "B2m"
[1] "Itgax"
[1] "Zbtb16"
[1] "Itgam"
[1] "B2m"
[1] "Gata3"
[1] "Ly6c1"
[1] "Hlf"
[1] "Gata3"
[1] "B2m"
[1] "Arg1"
[1] "Ly6c2"
[1] "Procr"
[1] "B2m"
[1] "Il2ra"
[1] "Ly6g"
[1] "Gzma"
[1] "B2m"
[1] "Fgd5"
[1] "Itga2"
[1] "Klrb1b"
[1] "Ncr1"
[1] "Itga1"
[1] "Hba-a1"
[1] "Hoxb5"
[1] "B2m"
[1] "Klrb1c"
[1] "Prss34"
[1] "Tmem176a"
[1] "Kit"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "Ly6a"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "Ly6e"
[1] "B2m"
[1] "Rora"
[1] "Cd27"
[1] "Zbtb16"
[1] "Slamf1"
[1] "B2m"
[1] "Gata3"
[1] "Cd34"
[1] "Gata3"
[1] "B2m"
[1] "Arg1"
[1] "B2m"
[1] "Irf8"
[1] "B2m"
[1] "S1pr5"
[1] "B2m"
[1] "B2m"
[1] "Csf1r"
[1] "Gzma"
[1] "B2m"
[1] "Ncr1"
[1] "Itga2"
[1] "B2m"
[1] "Ly86"
[1] "Klrb1c"
[1] "B2m"
[1] "Itga1"
[1] "B2m"
[1] "B2m"
[1] "Elane"
[1] "Il2rb"
[1] "B2m"
[1] "B2m"
[1] "Cd27"
[1] "Tmem176a"
[1] "Gfi1"
[1] "B2m"
[1] "B2m"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Cebpe"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Gstm1"
[1] "B2m"
[1] "Itga2"
[1] "Cd8a"
[1] "Itga1"
[1] "Fcnb"
[1] "B2m"
[1] "Tmem176a"
[1] "Ltf"
[1] "Cxcr6"
[1] "B2m"
[1] "Cd19"
[1] "Klf1"
[1] "Cd4"
[1] "B2m"
[1] "Cd8a"
[1] "Epor"
[1] "B2m"
[1] "Cd8a"
[1] "Gata1"
[1] "Itgax"
[1] "Pf4"
[1] "Itgam"
[1] "Itga2b"
[1] "Ly6c1"
[1] "Ly6c2"
[1] "Gp1bb"
[1] "Ly6g"
[1] "Prg2"
[1] "Klrb1b"
[1] "Hba-a1"
[1] "Prg3"
[1] "Prss34"
[1] "Dntt"
[1] "B2m"
[1] "Rag1"
[1] "B2m"
[1] "Ccl5"
[1] "B2m"
[1] "Tsix"
[1] "Tcf7"
[1] "B2m"
[1] "Xist"
[1] "B2m"
[1] "B2m"
[1] "Gata3"
[1] "B2m"
[1] "Il7r"
[1] "B2m"
[1] "Cd4"
[1] "B2m"
[1] "Tsix"
[1] "Xist"
[1] "B2m"
[1] "B2m"
[1] "Dntt"
[1] "Rag1"
[1] "Cd19"
[1] "Vpreb2"
[1] "Ly6a"
[1] "Kit"
[1] "Prdm1"
[1] "Slamf1"
[1] "Sdc1"
[1] "Cd48"
[1] "Tsix"
[1] "Cd34"
[1] "Prss34"
[1] "Xist"
[1] "Fcgr3"
[1] "C1qb"
[1] "Fcgr2b"
[1] "Hlf"
[1] "Siglech"
[1] "Tsix"
[1] "Cd74"
[1] "Xist"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Rora"
[1] "Zbtb16"
[1] "Zbtb16"
[1] "Gata3"
[1] "Gata3"
[1] "Gata3"
[1] "Gata3"
[1] "Arg1"
[1] "Arg1"
[1] "Il2ra"
[1] "Il2ra"
[1] "B2m"
[1] "B2m"
[1] "Ncr1"
[1] "B2m"
[1] "Klrb1c"
[1] "Klrb1c"
[1] "Ly6a"
[1] "B2m"
[1] "B2m"
[1] "Kit"
[1] "B2m"
[1] "B2m"
[1] "Slamf1"
[1] "Il2rb"
[1] "Il2rb"
[1] "Cd48"
[1] "Cd27"
[1] "Cd27"
[1] "Cd34"
[1] "B2m"
[1] "Fcgr3"
[1] "B2m"
[1] "B2m"
[1] "Fcgr2b"
[1] "B2m"
[1] "B2m"
[1] "Hlf"
[1] "S1pr5"
[1] "B2m"
[1] "Gzma"
[1] "S1pr5"
[1] "Itga2"
[1] "Gzma"
[1] "Itga1"
[1] "B2m"
[1] "Itga2"
[1] "Tmem176a"
[1] "Itga1"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "Tmem176a"
[1] "Cd4"
[1] "Cd8a"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "Cd8a"
[1] "Flt3"
[1] "Il7r"
[1] "Dntt"
[1] "Flt3"
[1] "Il7r"
[1] "Dntt"
[1] "Irf8"
[1] "Gata1"
[1] "Gata2"
[1] "Cebpa"
[1] "Runx1"
[1] "Gfi1"
[1] "Cebpe"
[1] "Itgam"
[1] "Mmp9"
[1] "Tlr4"
[1] "Il1b"
[1] "S100a8"
[1] "Spi1"
[1] "B2m"
[1] "Rora"
[1] "Zbtb16"
[1] "Gata3"
[1] "Gata3"
[1] "Arg1"
[1] "Tsix"
[1] "Il2ra"
[1] "Xist"
[1] "B2m"
[1] "B2m"
[1] "Klrb1c"
[1] "B2m"
[1] "Irf8"
[1] "B2m"
[1] "Gata1"
[1] "Il2rb"
[1] "Tsix"
[1] "Gata2"
[1] "Cd27"
[1] "Xist"
[1] "Cebpa"
[1] "B2m"
[1] "Runx1"
[1] "B2m"
[1] "Gfi1"
[1] "B2m"
[1] "Cebpe"
[1] "S1pr5"
[1] "Itgam"
[1] "Gzma"
[1] "Mmp9"
[1] "Tlr4"
[1] "Itga2"
[1] "Mki67"
[1] "Il1b"
[1] "Itga1"
[1] "S100a8"
[1] "Cdk1"
[1] "B2m"
[1] "Spi1"
[1] "Tmem176a"
[1] "Top2a"
[1] "Cxcr6"
[1] "B2m"
[1] "Cd4"
[1] "Cd8a"
[1] "Mki67"
[1] "Cdk1"
[1] "Top2a"
[1] "Irf8"
[1] "Spi1"
[1] "Gata2"
[1] "Cd19"
[1] "Klf4"
[1] "Cxcr4"
[1] "B2m"
[1] "Ccr2"
[1] "Cd4"
[1] "B2m"
[1] "Itgax"
[1] "Itgam"
[1] "Ly6c1"
[1] "Ly6c2"
[1] "Irf8"
[1] "B2m"
[1] "Spi1"
[1] "B2m"
[1] "Gata2"
[1] "Klf4"
[1] "Hba-a1"
[1] "Cxcr4"
[1] "Prss34"
[1] "Ccr2"
[1] "Irf8"
[1] "Irf4"
[1] "Tsix"
[1] "Batf3"
[1] "Xist"
[1] "Zbtb46"
[1] "Itgax"
[1] "Sirpa"
[1] "Csf1r"
[1] "B2m"
[1] "Tsix"
[1] "Xist"
[1] "Cd19"
[1] "B2m"
[1] "Cd4"
[1] "B2m"
[1] "Itgax"
[1] "Irf8"
[1] "Irf4"
[1] "Itgam"
[1] "Batf3"
[1] "Ly6c1"
[1] "Zbtb46"
[1] "Ly6c2"
[1] "Itgax"
[1] "B2m"
[1] "Sirpa"
[1] "Csf1r"
[1] "B2m"
[1] "B2m"
[1] "Hba-a1"
[1] "Prss34"
[1] "Klf1"
[1] "Epor"
[1] "Car1"
[1] "Mt2"
[1] "Rhd"
[1] "Klf1"
[1] "Epor"
[1] "Ly6a"
[1] "Car1"
[1] "Mt2"
[1] "Kit"
[1] "Rhd"
[1] "Slamf1"
[1] "Cd48"
[1] "Cd34"
[1] "Fcgr3"
[1] "Fcgr2b"
[1] "Hlf"
[1] "Pf4"
[1] "Itga2b"
[1] "Vwf"
[1] "Pf4"
[1] "Itga2b"
[1] "Vwf"
[1] "Ly6a"
[1] "Kit"
[1] "Gata1"
[1] "Slamf1"
[1] "Gata2"
[1] "Cd48"
[1] "Gfi1b"
[1] "Mfsd2b"
[1] "Cd34"
[1] "Fcgr3"
[1] "Fcgr2b"
[1] "Hlf"
[1] "Gata1"
[1] "Gata2"
[1] "Gfi1b"
[1] "Mfsd2b"
[1] "Flt3"
[1] "Klrb1c"
[1] "Ncr1"
[1] "Flt3"
[1] "Il2rb"
[1] "Il7r"
[1] "Il7r"
[1] "Cd27"
[1] "Dntt"
[1] "Itgam"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "Flt3"
[1] "Il7r"
[1] "Dntt"
[1] "Irf8"
[1] "Gata1"
[1] "Flt3"
[1] "Gata2"
[1] "Klrb1c"
[1] "Ncr1"
[1] "Cebpa"
[1] "Il2rb"
[1] "Runx1"
[1] "Il7r"
[1] "Cd27"
[1] "Gfi1"
[1] "Itgam"
[1] "B2m"
[1] "Cebpe"
[1] "B2m"
[1] "Itgam"
[1] "B2m"
[1] "Rora"
[1] "B2m"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "Tlr4"
[1] "Il1b"
[1] "S100a8"
[1] "Spi1"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Irf8"
[1] "Gata1"
[1] "Gata2"
[1] "Cebpa"
[1] "B2m"
[1] "Runx1"
[1] "B2m"
[1] "Gfi1"
[1] "B2m"
[1] "B2m"
[1] "Cebpe"
[1] "B2m"
[1] "B2m"
[1] "Itgam"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Tlr4"
[1] "Il1b"
[1] "S100a8"
[1] "Spi1"
[1] "B2m"
[1] "Rora"
[1] "Zbtb16"
[1] "Gata3"
[1] "Gata3"
[1] "Arg1"
[1] "B2m"
[1] "B2m"
[1] "Ncr1"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "Cd27"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Irf8"
[1] "Itga2"
[1] "Itga1"
[1] "Spi1"
[1] "B2m"
[1] "Gata2"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "Klf4"
[1] "B2m"
[1] "Cxcr4"
[1] "B2m"
[1] "Cd8a"
[1] "Ccr2"
[1] "Irf8"
[1] "Spi1"
[1] "Gata2"
[1] "Klf4"
[1] "Cxcr4"
[1] "Ccr2"
[1] "Irf8"
[1] "Irf4"
[1] "B2m"
[1] "Batf3"
[1] "Rora"
[1] "Zbtb46"
[1] "Zbtb16"
[1] "Gata3"
[1] "Itgax"
[1] "Gata3"
[1] "Arg1"
[1] "Sirpa"
[1] "B2m"
[1] "Csf1r"
[1] "B2m"
[1] "Ncr1"
[1] "Siglech"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "Cd27"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Itga2"
[1] "Itga1"
[1] "B2m"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "Cd8a"
[1] "Irf8"
[1] "Irf4"
[1] "Batf3"
[1] "Zbtb46"
[1] "Itgax"
[1] "Sirpa"
[1] "Csf1r"
[1] "Siglech"
[1] "Klf1"
[1] "Epor"
[1] "Car1"
[1] "Mt2"
[1] "Rhd"
[1] "Tsix"
[1] "Xist"
[1] "Tsix"
[1] "Xist"
[1] "Klf1"
[1] "Epor"
[1] "Car1"
[1] "Mt2"
[1] "Rhd"
[1] "Pf4"
[1] "Itga2b"
[1] "Vwf"
[1] "Pf4"
[1] "Itga2b"
[1] "Vwf"
[1] "Gata1"
[1] "Gata2"
[1] "Gfi1b"
[1] "Mfsd2b"
[1] "Gata1"
[1] "Gata2"
[1] "Gfi1b"
[1] "Mfsd2b"
[1] "Flt3"
[1] "Klrb1c"
[1] "B2m"
[1] "Il2rb"
[1] "Il7r"
[1] "Cd27"
[1] "Itgam"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "Flt3"
[1] "Klrb1c"
[1] "B2m"
[1] "Il2rb"
[1] "Il7r"
[1] "Cd27"
[1] "Itgam"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Zbtb16"
[1] "Gata3"
[1] "Gata3"
[1] "Arg1"
[1] "Il2ra"
[1] "B2m"
[1] "B2m"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "Cd27"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "S1pr5"
[1] "B2m"
[1] "Itga2"
[1] "Itga1"
[1] "B2m"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "B2m"
[1] "Cd4"
[1] "B2m"
[1] "B2m"
[1] "Rora"
[1] "Zbtb16"
[1] "Gata3"
[1] "Gata3"
[1] "Arg1"
[1] "Il2ra"
[1] "B2m"
[1] "B2m"
[1] "Klrb1c"
[1] "B2m"
[1] "B2m"
[1] "Il2rb"
[1] "Cd27"
[1] "B2m"
[1] "B2m"
[1] "B2m"
[1] "S1pr5"
[1] "B2m"
[1] "Itga2"
[1] "Itga1"
[1] "B2m"
[1] "Tmem176a"
[1] "Cxcr6"
[1] "B2m"
[1] "Cd4"
[1] "B2m"
[1] "Tsix"
[1] "Xist"
[1] "Tsix"
[1] "Xist"
